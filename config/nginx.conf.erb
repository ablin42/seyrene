daemon off;
#Heroku dynos have at least 4 cores.
#ffff
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
	use epoll;
	accept_mutex on;
	worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
	include mime.types;
	default_type application/octet-stream;

    gzip on;
    gzip_comp_level 2;
	gzip_min_length 512;
	
	server_tokens off;
	sendfile on;

	client_body_timeout 5;

	log_format  main  	'$remote_addr - $remote_user [$time_local] "$request" '
                    	'$status $body_bytes_sent "$http_referer" '
                    	'"$http_user_agent" "$http_x_forwarded_for"';
	access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> main;
	error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>;


	#Must read the body in 5 seconds.
	
	upstream app_server {
		server unix:/tmp/nginx.socket fail_timeout=0;
	}
	 

	server {
		listen <%= ENV["PORT"] %>;
		server_name maral.herokuapp.com www.maral.herokuapp.com;
		keepalive_timeout 5;
		root /app/public; ##


		location /public { ##
			#try_files $uri @app_server;
			try_files  $uri $uri/ =404;
			gzip on;
			gzip_types application/javascript image/* text/css;
			
			#proxy_pass http://app_server;
			#proxy_set_header X-Real-IP $remote_addr;
			#proxy_set_header Host $host;
			#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			# Following is necessary for Websocket support
			#proxy_http_version 1.1;
			#proxy_set_header Upgrade $http_upgrade;
			#proxy_set_header Connection "upgrade";
		}

		location ~* \.(jpg|jpeg|png|gif|ico)$ {
       		expires 30d;
		}

		location ~* \.(css|js)$ {
			expires 7d;
		}
	}
}