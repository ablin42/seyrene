<% include ../partials/head %>

<div class="container container-single">
	<div class="single-wrapper col-8 offset-2">
		<h1 class="single-title">RÃ©diger un post de blog</h1>
		<form class="col-8 offset-2" id="blog" method="POST" action="/api/blog/">
			<hr />
			<div class="form-group">
				<label class="control-label">Titre</label>
				<input
					class="form-control"
					id="title"
					type="text"
					placeholder="Titre"
					name="title"
					onkeyup="Validate.String(this, 4, 256);"
					value="<% if (locals.formData) { %><%= locals.formData.title %><% } %>"
					required
				/>
				<span id="i_title" class="form-info">Title must contain between 4 and 256 characters</span>
			</div>

			<div class="form-group">
				<div id="editor" style="background-color: white;" onkeyup="saveContent()"></div>
				<input type="hidden" name="content" id="content" />
				<span id="i_content" class="form-info">Content must contain between 128 and 4096 characters</span>
			</div>

			<input type="hidden" name="_csrf" value="<%= locals.csrfToken %>" />
			<input type="submit" class="logbtn" value="Valider" id="submit-blog" />
		</form>
	</div>
</div>

<script>
	const toolbarOptions = [
	    ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
	    ['blockquote', 'code-block'],
	    [{ 'list': 'ordered'}, { 'list': 'bullet' }],
	    [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
	    [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
	    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
	    [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
	    [{ 'font': [] }],
	    [{ 'align': [] }],
	    ['link', 'image'],
	    ['clean']                                         // remove formatting button
	];

	let quill = new Quill('#editor', {
	    modules: {
	        toolbar: toolbarOptions,
	    },
	    placeholder: "Le contenu de votre ticket de blog...",
	    theme: 'snow'
	});

	<% if (locals.formData) { %>
	    let toAppend = "<%= locals.formData.content %>";
	    toAppend = toAppend.replace(/(\r\n|\n|\r)/gm,"").replace(/&#34;/g, '"').replace(/&lt;/g, "<").replace(/&gt;/g, ">");
	    const delta = quill.clipboard.convert(toAppend);
	    quill.setContents(delta, 'silent');
	<% } %>

	const saveButton = document.getElementById('submit-blog');
	const editorData = document.getElementById('content');

	saveButton.addEventListener('click', (event) => {
	    editorData.value = quill.root.innerHTML;
	})

	function saveContent() {
	    editorData.value = quill.root.innerHTML;
	    Validate.String(editorData, 128);
	}
</script>
<script src="/scripts/frontValidation.js"></script>
<% include ../partials/footer %>
