<% include partials/head %>

<script src="https://js.stripe.com/v3/"></script>
<script>
  const stripePublicKey = '<%= locals.stripePublicKey %>';
  const stripe = Stripe(stripePublicKey);
</script>

<div class="container container-single"> 
  <div class="single-wrapper">
    <div class="billing-wrapper col-6 offset-3">
      <h1>Billing address</h1>
      <form id="deliveryform" method="POST" action="" onsubmit="return saveBilling(event);" >
        <div class="row">
          <div class="col-md-6">
            <label class="control-label">Nom</label>
            <input class="form-control" id="lastname" name="lastname" placeholder="Doe" value="" onkeyup="Validate.String(this, 2, 128);" required>
            <span id="i_lastname" class="form-info"><b>Last Name</b> must contain between <b>2 and 128 characters</b></span>
          </div>
          <div class="col-md-6">
            <label class="control-label">Prénom</label>
            <input class="form-control" id="firstname" name="firstname" placeholder="John" value="" onkeyup="Validate.String(this, 2, 128);" required>
            <span id="i_firstname" class="form-info"><b>First Name</b> must contain between <b>2 and 128 characters</b></span>
          </div>
        </div>

        <label class="control-label">Adresse</label>        
        <input id="autocomplete" name="fulltext_address" placeholder="Enter your address" onFocus="geolocate()" class="form-control" value="" required>
        
        <div id="address">
          <div class="row">
            <div class="col-md-12">
              <label class="control-label">Route</label>
              <input class="form-control" id="route" placeholder="13 rue de Clignancourt" name="street_name" value="" required>
            </div>
          </div>
          <div class="row">
            <div class="col-md-6">
              <label class="control-label">Ville</label>
              <input class="form-control field" id="locality" name="city" placeholder="Paris" value="" required>
            </div>
            <div class="col-md-6"> 
              <label class="control-label">Région</label>
              <input class="form-control" id="administrative_area_level_1" name="state" placeholder="Île-de-France" value="" required>
            </div>
          </div>
          <div class="row">
            <div class="col-md-6">
              <label class="control-label">Code Postal</label>
              <input class="form-control" id="postal_code" name="postal_code" placeholder="75001" value="" required>
            </div>
            <div class="col-md-6">
              <label class="control-label">Pays</label>
              <input class="form-control" id="country" name="country" placeholder="France" value="" required>
            </div>
          </div>
          <div class="row mt-4">
            <div class="col-6 offset-3">
            <input type="submit" class="logbtn" value="Enregistrer" id="submit-deliveryform">
          </div>
          </div>
        </div>
        
      </form>
    </div>
   
    <div class="payment-form-wrapper col-6 offset-3"> 
      <h1 class="payment-price" style="color: white"><% if (locals.totalPrice) { %><%= locals.totalPrice %><% } %>€</h1>
      <!-- define form(using old one (charge))
        <form id="payment-form">
        <div id="card-element">Stripe.js injects the Card Element</div>
        <button id="submit">
          <div class="spinner hidden" id="spinner"></div>
          <span id="button-text">Pay</span>
        </button>
        <p id="card-errors" role="alert"></p>
        <p class="result-message hidden">
          Payment succeeded, see the result in your
          <a href="" target="_blank">Stripe dashboard.</a> Refresh the page to pay again.
        </p>
      </form> 
      -->
        <form action="" method="POST" id="payment-form">
            <input type="text" id="email" placeholder="Email address" />
            <label for="card-element" class="card-label">
                Credit or debit card
            </label>
            <div class="form-row">
              <div id="card-element">
                  <!-- A Stripe Element will be inserted here. -->
              </div>
          
              <!-- Used to display Element errors. -->
              <div id="card-errors" role="alert" class="card-error"></div>
            </div>
        
            <button class="btn-pay mt-3">Submit Payment</button>
        </form>
    </div>
  </div>
</div>
  
<script>
    let orderId;
    let clientSecret;

    fetch("/api/stripe/create-intent", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: []
    })
    .then(function(result) {return result.json();})
    .then(function(data) {
      console.log(data);
      if (data.error === true) {
        let alert = createAlertNode(data.message, "warning");
        addAlert(alert, "#header");
        document.querySelector(".btn-pay").disabled = true;
        return;
      }
      orderId = data.orderId;
      clientSecret = data.clientSecret;

      var elements = stripe.elements();
      var style = {
        base: {
        color: "#32325d",
        fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
        fontSmoothing: "antialiased",
        fontSize: "16px",
        "::placeholder": {
          color: "#aab7c4"
        }},
        invalid: {
          color: "#fa755a",
          iconColor: "#fa755a"
        }
      };

      // Create an instance of the card Element.
      var card = elements.create('card', {style: style});
      card.mount('#card-element');

      card.on("change", function (event) {
        // Disable the Pay button if there are no card details in the Element
        document.querySelector("button").disabled = event.empty;
        document.querySelector("#card-errors").textContent = event.error ? event.error.message : "";
      });

      var form = document.getElementById("payment-form");
      form.addEventListener("submit", function(event) {
        event.preventDefault();
        payWithCard(stripe, card, data.clientSecret);
      });
    })

    var payWithCard = function(stripe, card, clientSecret) {
      stripe.confirmCardPayment(clientSecret, {
        receipt_email: document.getElementById('email').value,
        payment_method: {
          card: card
        },
        billing_details: {
          /*"address": {
            "city": null,
            "country": null,
            "line1": null,
            "line2": null,
            "postal_code": null,
            "state": null
          },
          "email": null,
          "name": null,
          "phone": null*/
        }
      })
      .then(function(result) {
        console.log(result);
        if (result.error) {
          let alert = createAlertNode(result.error.message, "warning");
          addAlert(alert, "#header");
          return;
        } 
        console.log(result, result.paymentIntent.id);

        fetch("/api/order/confirm", { //to remove once live using webhooks
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({type: "payment_intent.succeeded", data: {object: {id:result.paymentIntent.id}}})
        })
        .then(function(result) {return result.json();})
        .then(function(data) {
          if (data.error === true) {
            let alert = createAlertNode(data.message);
            addAlert(alert, "#header");
            return;
          }
        })
        setTimeout(function(){ window.location.href = `/api/cart/clear/${orderId}`; }, 2000);
      });
    };
</script>
<script>
  function saveBilling(e) {
    e.preventDefault();

    let obj = {
      firstname: $("#firstname")[0].value,
      lastname: $("#lastname")[0].value,
      fulltext_address: $("#autocomplete")[0].value,
      route: $("#route")[0].value,
      locality: $("#locality")[0].value,
      administrative_area_level_1: $("#administrative_area_level_1")[0].value,
      postal_code: $("#postal_code")[0].value,
      country: $("#country")[0].value,
    };

    let clientSplit = clientSecret.split("_");
    let formatedClientSecret = clientSplit[0] + "_" + clientSplit[1];

    fetch("/api/order/billing/save", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({billing: obj, clientSecret: formatedClientSecret})
    })
    .then(function(result) {return result.json();})
    .then(function(data) {
      if (data.error === true) {
        let alert = createAlertNode(data.message, "warning");
        addAlert(alert, "#header");
        return;
      } 
      let alert = createAlertNode("Billing information successfully saved!", "success");
      addAlert(alert, "#header");
    })
  }
</script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBluorKuf7tdOULcDK08oZ-98Vw7_12TMI&libraries=places&callback=initAutocomplete" async defer></script>
<script src="scripts/auto-complete.js"></script>
<script src="/scripts/frontValidation.js"></script>
<% include partials/footer %>