<% include partials/head %>

<script src="https://js.stripe.com/v3/"></script>
<script>
	const stripePublicKey = "<%= locals.stripePublicKey %>";
	const stripe = Stripe(stripePublicKey);
</script>

<div class="container container-single">
	<div class="single-wrapper">
		<div class="payment-form-wrapper col-6 offset-3">
			<h1 class="payment-price" style="color: white;"><% if (locals.totalPrice) { %><%= locals.totalPrice %><% } %>â‚¬</h1>
			<!-- define form(using old one (charge))
        <form id="payment-form">
        <div id="card-element">Stripe.js injects the Card Element</div>
        <button id="submit">
          <div class="spinner hidden" id="spinner"></div>
          <span id="button-text">Pay</span>
        </button>
        <p id="card-errors" role="alert"></p>
        <p class="result-message hidden">
          Payment succeeded, see the result in your
          <a href="" target="_blank">Stripe dashboard.</a> Refresh the page to pay again.
        </p>
      </form> 
      -->
			<form action="" method="POST" id="payment-form">
				<input type="text" id="email" placeholder="Email address" />
				<label for="card-element" class="card-label">
					Credit or debit card
				</label>
				<div class="form-row">
					<div id="card-element">
						<!-- A Stripe Element will be inserted here. -->
					</div>

					<!-- Used to display Element errors. -->
					<div id="card-errors" role="alert" class="card-error"></div>
				</div>

				<button class="btn-pay mt-3">Submit Payment</button>
			</form>
		</div>
	</div>
</div>

<script>
	let orderId;
	let clientSecret;

	fetch("/api/stripe/create-intent", {
		method: "POST",
		headers: {
			"Content-Type": "application/json"
		},
		body: []
	})
		.then(function (result) {
			return result.json();
		})
		.then(function (data) {
			console.log(data);
			if (data.error === true) {
				let alert = createAlertNode(data.message, "warning");
				addAlert(alert, "#header");
				document.querySelector(".btn-pay").disabled = true;
				return;
			}
			orderId = data.orderId;
			clientSecret = data.clientSecret;

			let elements = stripe.elements();
			let style = {
				base: {
					"color": "#32325d",
					"fontFamily": '"Helvetica Neue", Helvetica, sans-serif',
					"fontSmoothing": "antialiased",
					"fontSize": "16px",
					"::placeholder": {
						color: "#aab7c4"
					}
				},
				invalid: {
					color: "#fa755a",
					iconColor: "#fa755a"
				}
			};

			// Create an instance of the card Element.
			let card = elements.create("card", { style: style });
			card.mount("#card-element");

			card.on("change", function (event) {
				// Disable the Pay button if there are no card details in the Element
				document.querySelector("button").disabled = event.empty;
				document.querySelector("#card-errors").textContent = event.error ? event.error.message : "";
			});

			let form = document.getElementById("payment-form");
			form.addEventListener("submit", function (event) {
				event.preventDefault();
				payWithCard(stripe, card, data.clientSecret);
			});
		});

	let payWithCard = function (stripe, card, clientSecret) {
		stripe
			.confirmCardPayment(clientSecret, {
				receipt_email: document.getElementById("email").value,
				payment_method: {
					card: card
				},
				billing_details: {
					/*"address": {
            "city": null,
            "country": null,
            "line1": null,
            "line2": null,
            "postal_code": null,
            "state": null
          },
          "email": null,
          "name": null,
          "phone": null*/
				}
			})
			.then(function (result) {
				console.log(result);
				if (result.error) {
					let alert = createAlertNode(result.error.message, "warning");
					addAlert(alert, "#header");
					return;
				}
				console.log(result, result.paymentIntent.id);

				/*
				fetch("/api/order/confirm", {
					//to remove once live using webhooks
					method: "POST",
					headers: {
						"Content-Type": "application/json"
					},
					body: JSON.stringify({ type: "payment_intent.succeeded", data: { object: { id: result.paymentIntent.id } } })
				})
					.then(function (result) {
						return result.json();
					})
					.then(function (data) {
						if (data.error === true) {
							let alert = createAlertNode(data.message);
							addAlert(alert, "#header");
							return;
						}
					});*/
				setTimeout(function () {
					window.location.href = `/api/cart/clear/${orderId}`;
				}, 2000);
			});
	};
</script>
<% include partials/footer %>
