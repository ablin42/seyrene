<% include partials/head %>

<script src="https://checkout.stripe.com/checkout.js" ></script>
<script>const stripePublicKey = '<%= locals.stripePublicKey %>';</script>
<script src="/scripts/cart.js"></script>

<div class="container container-single"> 
  <div class="single-wrapper">
    <div class="col-10 offset-1">
      <div class="text-center">
        <b class="alertEmpty text-center" id="alertEmpty" <% if (locals.totalPrice != 0) { %> style="display: none;" <% } %>>Votre panier est vide!</b>
      </div>
    <% if(locals.products){ %>
      <% if (locals.totalPrice != 0 && locals.totalQty != 0) { %>
        <div class="cart-row" id="cart-row-header">
          <span class="cart-item cart-header cart-column">ITEM</span>
          <span class="cart-quantity cart-header cart-column">QUANTITÉ</span>
          <span class="cart-price cart-header cart-column">PRIX</span>
        </div>
      <% } %>

      <% Object.keys(locals.products).forEach(function (index) { %>
        <div class="cart-row cart-row-item" id="<%= locals.products[index].item._id %><% if (!locals.products[index].item.isUnique) { %>-<%= index %><% } %>">
          <div class="cart-item cart-column">
            <img class="cart-img" src="/api/image/main/Shop/<%= locals.products[index].item._id %>" alt="<%= locals.products[index].item.title %>">
            <div class="cart-title-description">
              <h4 class="cart-item-title"><b><%= locals.products[index].shorttitle %>...</b></h4>
              <p class="cart-item-description"><%= locals.products[index].shortcontent %>...</p>
              <p><%= locals.products[index].details %></p>
            </div>
          </div>
              
          <div class="cart-quantity cart-column">
            <% if (locals.products[index].item.isUnique === true) { %>
              <i class="fas fa-minus fa-2x qty-update" onclick="cartDel('<%= locals.products[index].item._id %>', this)"></i>
              <input id="qty-<%= locals.products[index].item._id %>" class="cart-item-qty form-control" value="<%= locals.products[index].qty %>" name="cart-item-qty" title="Numbers only" readonly>
              <i class="fas fa-plus fa-2x qty-update" min="0" style="color: var(--dark-shade-m1); cursor: default;"></i>
            <% } else { %>
              <i class="fas fa-minus fa-2x qty-update" onclick="pwintyCartDel('<%= locals.products[index].item._id %>', '<%= index %>', this)"></i>
              <input id="qty-<%= locals.products[index].item._id %>-<%= index %>" class="cart-item-qty form-control" value="<%= locals.products[index].qty %>" name="cart-item-qty" title="Numbers only" onchange="pwintyUpdateValue(event, this, '<%= locals.products[index].item._id %>', '<%= index %>')">
              <i class="fas fa-plus fa-2x qty-update" min="0" onclick="pwintyCartAdd('<%= locals.products[index].item._id %>', '<%= index %>', this)"></i>
            <% } %>
          </div>

          <div class="cart-price cart-column">
            <p class="cart-item-price"><b><%= locals.products[index].price %>€</b></p>
            <% if (locals.products[index].item.isUnique !== true) { %>
              <p class="cart-item-unitprice"><b><%= locals.products[index].unitPrice %>€/Unité</b></p>
            <% } %>
          </div>
      </div>
      <% }) %>
    <% } %>*

    <% if(locals.isDelivery){ %>
      <div class="panel-heading">
        <h2 class="panel-title">Informations pour la livraison</h2>
        <h6>Nous utiliserons ces informations pour livrer vos commandes, cliquez <a href="/User">ici</a> pour modifier ces informations</h6>
      </div>
        <div class="row">
          <div class="col-md-6">
            <label class="control-label">Nom</label>
            <input class="form-control" id="lastname" name="lastname" placeholder="Doe" value="<% if (locals.delivery.lastname) { %><%= locals.delivery.lastname %><% } %>" onkeyup="Validate.String(this, 2, 128);" required>
            <span id="i_lastname" class="form-info"><b>Last Name</b> must contain between <b>2 and 128 characters</b></span>
          </div>
          <div class="col-md-6">
            <label class="control-label">Prénom</label>
            <input class="form-control" id="firstname" name="firstname" placeholder="John" value="<% if (locals.delivery.firstname) { %><%= locals.delivery.firstname %><% } %>" onkeyup="Validate.String(this, 2, 128);" required>
            <span id="i_firstname" class="form-info"><b>First Name</b> must contain between <b>2 and 128 characters</b></span>
          </div>
        </div>

        <label class="control-label">Adresse</label>        
        <input id="autocomplete" name="fulltext_address" placeholder="Enter your address" onFocus="geolocate()" class="form-control" value="<% if (locals.delivery.full_address) { %><%= locals.delivery.full_address %><% } %>" required>
        
        <div id="address">
          <div class="row">
            <div class="col-md-12">
              <label class="control-label">Route</label>
              <input class="form-control" id="route" placeholder="13 rue de Clignancourt" name="street_name" value="<% if (locals.delivery.full_street) { %><%= locals.delivery.full_street %><% } %>" required>
            </div>
          </div>
          <div class="row">
            <div class="col-md-6">
              <label class="control-label">Ville</label>
              <input class="form-control field" id="locality" name="city" placeholder="Paris" value="<% if (locals.delivery.city) { %><%= locals.delivery.city %><% } %>" required>
            </div>
            <div class="col-md-6"> 
              <label class="control-label">Région</label>
              <input class="form-control" id="administrative_area_level_1" name="state" placeholder="Île-de-France" value="<% if (locals.delivery.state) { %><%= locals.delivery.state %><% } %>" required>
            </div>
          </div>
          <div class="row">
            <div class="col-md-6">
              <label class="control-label">Code Postal</label>
              <input class="form-control" id="postal_code" name="postal_code" placeholder="75001" value="<% if (locals.delivery.zipcode) { %><%= locals.delivery.zipcode %><% } %>" required>
            </div>
            <div class="col-md-6">
              <label class="control-label">Pays</label>
              <input class="form-control" id="country" name="country" placeholder="France" value="<% if (locals.delivery.country) { %><%= locals.delivery.country %><% } %>" required>
            </div>
          </div>
        </div>
            <div class="row mt-3">
              <div class="col-md-6">
                <textarea id="instructions" class="instructions-textarea" name="instructions" placeholder="Door code or other useful informations..." readonly><% if (locals.delivery.instructions) { %><%= locals.delivery.instructions %><% } %></textarea>
              </div>
              <% } %>

              <% if (locals.totalPrice != 0 && locals.totalQty != 0){ %>
                <div class="col-md-6 offset-3 mt-4">
                  <div class="payment-div p-3">
                    <span id="total-price-span">PRIX TOTAL: <b id="total-price"><%= locals.totalPrice %>€</b></span>
                    <span id="total-qty-span">QUANTITÉ TOTALE: <b id="total-qty"><%= locals.totalQty %></b></span>
                    <button class="btn-purchase" onclick="submitCheckout();" type="button" id="purchase">Continuer</button>
                  </div>
                </div>
              <% } %>
              <% if(locals.isDelivery){ %>
            </div>
          </div>
        </div>
      <% } %>
      </div>
    </div>
  </div>
</div>


<script>
  let stripeHandler = StripeCheckout.configure({
  key: stripePublicKey,
  locale: "auto",
  token: function (token) {
    /* calls to purchase API, clears cart and redirects to order if purchase is succesful */
    fetch('/api/cart/purchase', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      body: JSON.stringify({stripeTokenId: token.id,})
    })
    .then((res) => {return res.json()})
    .then((data) => {
      console.log(data);
      if (data.err === false) {
        window.location.href = `http://localhost:8089/api/cart/clear/${data.id}`;
      } else {
        console.log("Something went wrong with your purchase!");
        throw new Error(data.msg)
      }
    })
    .catch((err) => {
      let alert = `<div id="alert" class="alert alert-info" role="alert">
                      <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                        ${err.message}
                    </div>`;
      addAlert(alert, "#header");
    })
  }
})

function submitCheckout () {
  let isLogged = "<%= locals.name %>";
  let isDelivery = "<%= locals.isDelivery %>";

  checkoutCaller(isLogged, isDelivery);
}

var PWINTY_DATA = [];
async function pwintyCartAdd(itemId, referenceId, caller) {
  let SKU = PWINTY_DATA[referenceId].SKU;
  let attributes = PWINTY_DATA[referenceId].attributes;
  PWINTY_DATA[referenceId].attributes.SKU = undefined;
  let price = PWINTY_DATA[referenceId].price;

  caller.disabled = true;
  caller.style.pointerEvents = "none";
  setTimeout(() => {
    caller.disabled = false;
    caller.style.pointerEvents = "auto";
  }, 1500);
  await fetch(`api/cart/add/pwinty/${itemId}`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Accept: "application/json"
    },
    body: JSON.stringify({SKU, price, attributes}),
    credentials: "include",
    mode: "same-origin"
  })
  .then(res => {return res.json();})
  .then(function(response) {
      let alertType = "success";
      if (response.error === false) {
        console.log(response)
        let totalQty = response.cart.totalQty;
        let totalPrice = response.cart.totalPrice;
        let rowId = document.getElementById(`${itemId}-${referenceId}`);

        if (rowId.classList.contains("cart-row-item")) {
          let itemQty = response.item.qty;
          let itemPrice = response.item.price;

          $(`#qty-${itemId}-${referenceId}`).val(itemQty);
          rowId.childNodes[5].childNodes[1].childNodes[0].innerText = itemPrice + "€";
          document.getElementById("total-price").innerText = totalPrice + "€";
          document.getElementById("total-qty").innerText = totalQty;
          document.getElementById("cartQty").innerText = totalQty;
        }
      } else 
          alertType = "warning";

      let alert = `<div id="alert" class="alert alert-${alertType}" role="alert">
                      <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                      ${response.msg}
                    </div>`;
      addAlert(alert, "#header");
  })
  .catch(err => {
      let alert = `<div id="alert" class="alert alert-danger" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                    ${err.message}
                  </div>`;
      addAlert(alert, "#header");
  });
  return;
}

async function pwintyCartDel(itemId, referenceId, caller) {
  let SKU = PWINTY_DATA[referenceId].SKU;
  let attributes = PWINTY_DATA[referenceId].attributes;
  PWINTY_DATA[referenceId].attributes.SKU = undefined;
  let price = PWINTY_DATA[referenceId].price;

  caller.disabled = true;
  caller.style.pointerEvents = "none";
  setTimeout(() => {
    caller.disabled = false;
    caller.style.pointerEvents = "auto";
  }, 1500);
  await fetch(`http://localhost:8089/api/cart/del/pwinty/${itemId}`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Accept: "application/json"
    },
    body: JSON.stringify({SKU, price, attributes}),
    credentials: "include",
    mode: "same-origin"
  })
    .then(res => {
      return res.json();
    })
    .then(function(response) {
      let alertType = "warning";
      if (response.error === false) {
        let totalQty = response.cart.totalQty;
        let totalPrice = response.cart.totalPrice;
        document.getElementById("cartQty").innerText = totalQty;

        if (totalPrice === 0) {
          $(".payment-div").attr("style", "display: none");
          $("#alertEmpty").attr("style", "display: inline-block");
          $("#cart-row-header").attr("style", "display: none");
        }

        let rowId = document.getElementById(`${itemId}-${referenceId}`);
        if (!rowId.classList.contains("card")) {
          if (response.cart.items[SKU]) {
            let itemQty = response.item.qty;
            let itemPrice = response.item.price;

            if (itemQty === 0)
              rowId.remove();

            $(`#qty-${itemId}-${referenceId}`).val(itemQty);
            rowId.childNodes[5].childNodes[1].childNodes[0].innerText = itemPrice + "€";
          } else 
            rowId.remove();

          document.getElementById("total-price").innerText = totalPrice + "€"; //format here or in api
          document.getElementById("total-qty").innerText = totalQty;
        }
      } else {
        console.log("error:", response);
        alertType = "warning";
      }
      let alert = `<div id="alert" class="alert alert-${alertType}" role="alert">
                      <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                      ${response.msg}
                    </div>`;
      addAlert(alert, "#header");
    })
    .catch(err => {
      console.log(err);
      let alert = `<div id="alert" class="alert alert-danger" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                    ${err.message}
                  </div>`;
      addAlert(alert, "#header");
    });
}

async function pwintyUpdateValue(e, item, itemId, referenceId) {
  try {
    if (item.value) {
      let value = parseInt(item.value);
      let SKU = PWINTY_DATA[referenceId].SKU;
      let attributes = PWINTY_DATA[referenceId].attributes;
      PWINTY_DATA[referenceId].attributes.SKU = undefined;
      let price = PWINTY_DATA[referenceId].price;
      if (Number.isInteger(value) && value >= 0) {
        await fetch(`http://localhost:8089/api/cart/update/pwinty/${itemId}/${value}`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Accept: "application/json"
            },
            body: JSON.stringify({SKU, price, attributes}),
            credentials: "include",
            mode: "same-origin"
          }
        )
          .then(res => {return res.json();})
          .then(function(response) {
            console.log("response:", response);
            let alertType = "info";
            if (response.error === false) {
              let totalQty = response.cart.totalQty;
              let totalPrice = response.cart.totalPrice;
              document.getElementById("cartQty").innerText = totalQty;
              let rowId = document.getElementById(`${itemId}-${referenceId}`);

              document.getElementById("total-price").innerText = totalPrice + "€"; //format here or in api
              document.getElementById("total-qty").innerText = totalQty;

              if (value === 0) 
                document.getElementById(`${itemId}-${referenceId}`).remove();
              else {
                if (!rowId.classList.contains("card")) {
                  let itemQty = response.item.qty;
                  let itemPrice = response.item.price;

                  item.value = itemQty;
                  rowId.childNodes[5].childNodes[1].childNodes[0].innerText = itemPrice + "€";
                }
              }
            } else {
              console.log("API answered with error:", response);
              alertType = "warning";
            }
            let alert = `<div id="alert" class="alert alert-${alertType}" role="alert">
                          <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                          ${response.msg}
                        </div>`;
            addAlert(alert, "#header");
          })
          .catch(err => {
            console.log("An error occured while contacting the API:", err);
            let alert = `<div id="alert" class="alert alert-danger" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                        ${err.message}
                      </div>`;
            addAlert(alert, "#header");
          });
      } else
        throw new Error("The <b>quantity</b> has to be a positive integer");
    } else throw new Error("The <b>quantity</b> you entered is invalid");
  } catch (err) {
    item.value = 1;
    let alert = `
          <div id="alert" class="alert alert-warning" role="alert">
              <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
              ${err.message}
          </div>`;
    addAlert(alert, "#header");
  }
}
</script>
<% if(locals.products){ %>
  <% Object.keys(locals.products).forEach(function (index) { %>
    <% if (locals.products[index].item.isUnique !== true) { %>
       <script>
        PWINTY_DATA["<%= index %>"] = {
            SKU: "<%= locals.products[index].attributes.SKU %>",
            price: parseFloat("<%= locals.products[index].unitPrice %>"),
            attributes: JSON.parse(`<%= locals.products[index].stringifiedAttributes %>`.replace(/&#34;/gi, "\""))
        }
      </script>
    <% } %>
  <% }) %>
<% } %>
<% include partials/footer %>